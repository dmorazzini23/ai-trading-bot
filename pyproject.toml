[project]
name = "ai-trading-bot"
version = "0.0.0"
description = "AI trading bot (lightweight testable build)"
readme = "README.md"
requires-python = ">=3.12,<3.13"
dependencies = [
  "numpy==1.26.4",  # AI-AGENT-REF: pin NumPy to 1.x for pandas-ta compatibility
  "requests>=2.31,<3",
  "urllib3==2.5.0",  # AI-AGENT-REF: align with Alpaca SDK
  "certifi>=2023.7.22",
  "charset-normalizer>=3.2,<4",
  "idna>=3.4,<4",
  "psutil>=5.9,<6",
  "portalocker==2.7.0",
  "alpaca-py>=0.42.0,<1",  # AI-AGENT-REF: include Alpaca SDK
  "joblib>=1.3,<2",
  "Flask>=3,<4",
  "beautifulsoup4>=4.12,<5",
  "lxml>=5,<6",
  "aiohttp>=3.9,<4",
  "pydantic==2.8.2",
  "pydantic-settings>=2.2,<3",
  "tzdata>=2024.1",  # AI-AGENT-REF: ensure timezone data
  "pandas-market-calendars>=5.1,<6",  # AI-AGENT-REF: exchange calendars
  "schedule==1.2.2",
  "prometheus-client==0.20.0",
  "cachetools==5.3.3",
  "ratelimit==2.2.1",
  "python-dotenv==1.1.1",
  "python-dateutil>=2.8.2,<3",
  "cryptography>=41",
  "tenacity>=8",
  "scikit-learn==1.5.1",
  "scipy==1.13.1",
  "threadpoolctl==3.5.0",
  "pandas==2.2.2",
  "hmmlearn==0.3.2",
]

[project.optional-dependencies]
pandas = [
  "pandas>=2.0"
]
plot = [
  "matplotlib==3.10.5"
]
ml = [
  "scikit-learn>=1.4",
  "torch>=2.2 ; platform_system != 'Windows'"
]
nlp = [
  "transformers>=4.55",
  "torch>=2.2 ; platform_system != 'Windows'",
]
ta = [
  "ta>=0.11.0",
  "TA-Lib>=0.4.26"
]
train = [
  "lightgbm==4.6.0",
  "xgboost==3.0.4",
  "optuna==4.5.0",
]
all = [
  "ai-trading-bot[pandas,plot,ml,ta,train,nlp]"
]
test = ["pytest>=7.4", "pytest-cov>=4.1"]

[project.scripts]
validate-env = "ai_trading.tools.env_validate:main"

[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["ai_trading*"]
exclude = ["tests*", "scripts*", "artifacts*"]

[tool.black]
line-length = 120
target-version = ["py312"]


[tool.ruff]
target-version = "py312"
line-length = 100
src = ["ai_trading", "tests", "tools"]
extend-exclude = ["**/.venv", "**/venv", "build", "dist", "notebooks", "artifacts", "TROUBLESHOOTING.md"]

# Focus on safe mechanical families only.
[tool.ruff.lint]
select = ["E", "F", "UP", "DTZ", "T201", "TID"]  # AI-AGENT-REF: safe lint families
ignore = ["E501"]

# Allow prints in tests/tools; allow re-export F401 in package __init__ files.
[tool.ruff.lint.per-file-ignores]
"tests/**" = ["T201", "TID251"]
"tools/**" = ["T201", "E402", "TID251"]
"scripts/**" = ["T201", "E402", "TID251"]
"**/__init__.py" = ["F401"]

[tool.ruff.lint.flake8-tidy-imports.banned-api]
"requests.get" = "use ai_trading.utils.http.get"
"requests.post" = "use ai_trading.utils.http.post"
"requests.put" = "use ai_trading.utils.http.put"
"requests.delete" = "use ai_trading.utils.http.delete"
"requests.request" = "use ai_trading.utils.http.request"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q"
testpaths = [
  "tests"
]
markers = [
  "integration: tests that require network or vendor APIs",
  "slow: tests that are slow or long-running"
]
filterwarnings = [
  "ignore::DeprecationWarning",
]
