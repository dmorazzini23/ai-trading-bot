name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONUNBUFFERED: 1
      # Ensure tests never call live services
      AI_TRADING_OFFLINE_TESTS: "1"
      ALPACA_API_KEY: "test"
      ALPACA_SECRET_KEY: "test"
      # If your code looks at this to choose paper/live, force paper/offline
      ALPACA_ENV: "paper"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
          cache-dependency-path: |
            pyproject.toml
            requirements.txt
            requirements-test.txt

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          # Runtime deps
          pip install -r requirements.txt
          # Test-only deps (prefer extras; fall back to plain file for forks)
          pip install -e ".[test]" || pip install -r requirements-test.txt

      - name: Static compile check
        run: |
          python - <<'PY'
          import sys, subprocess, shlex, py_compile
          try:
              out = subprocess.check_output(shlex.split("git ls-files '*.py'")).decode().splitlines()
          except subprocess.CalledProcessError:
              out = []
          for f in out:
              py_compile.compile(f, doraise=True)
          print(f"OK: py_compile passed for {len(out)} files")
          PY

      - name: Quick verification suite
        run: |
          chmod +x scripts/quick_verify.sh
          ./scripts/quick_verify.sh

      - name: Audit exceptions
        run: make audit-exceptions

      - name: Run tests
        run: |
          pytest -q -n auto --disable-warnings
