name: Droplet CI & Nightly Health-Check

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 3 * * *'

concurrency:
  group: "${{ github.workflow }}"
  cancel-in-progress: true

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt -r requirements-dev.txt
      - name: "Debug: list installed packages"
        run: pip list
      - name: "Debug: verify pandas import"
        run: python -c "import pandas; print('pandas', pandas.__version__)"
      - run: black .
      - run: black --check .
      - run: flake8 . --max-line-length=120 --extend-ignore=E402,E203 --exclude venv,.venv
      - name: Run tests
        run: python -m pytest --maxfail=1 --disable-warnings -q

  deploy-to-droplet:
    needs: lint-and-test
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    env:
      DROPLET_HOST: ${{ secrets.DROPLET_HOST }}
      DROPLET_USER: ${{ secrets.DROPLET_USER }}
      DROPLET_SSH_KEY: ${{ secrets.DROPLET_SSH_KEY }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - uses: actions/checkout@v4
      - name: Build Docker image
        run: docker build -t my-bot:${{ github.sha }} .
      - name: Log in to Docker registry
        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - name: Push Docker image
        run: docker push my-bot:${{ github.sha }}
      - name: Prepare SSH key
        run: |
          echo "$DROPLET_SSH_KEY" > droplet_key.pem
          chmod 600 droplet_key.pem
      - name: Deploy container on droplet
        run: |
          if [ -z "$DROPLET_HOST" ]; then
            echo "Skipping deploy, DROPLET_HOST not set"
            exit 0
          fi
          ssh -i droplet_key.pem -o StrictHostKeyChecking=no "$DROPLET_USER@$DROPLET_HOST" <<EOF
          docker pull my-bot:${{ github.sha }}
          docker stop tradingbot || true
          docker rm tradingbot || true
          docker run -d --name tradingbot --restart always my-bot:${{ github.sha }}
EOF

  nightly-health-check:
    if: ${{ github.event_name == 'schedule' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt -r requirements-dev.txt
      - name: Run health-check script
        run: |
          if [ -z "$DROPLET_HOST" ]; then
            echo "Skipping health check, DROPLET_HOST not set"
            exit 0
          fi
          ssh -i droplet_key.pem -o StrictHostKeyChecking=no \
            "$DROPLET_USER@$DROPLET_HOST" \
            "cd ~/ai-trading-bot && ./deploy.sh"
      - name: Commit refactor suggestions
        if: ${{ failure() }}
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "🛠️ Automated refactoring suggestions from ChatGPT"
          file_pattern: "refactor-suggestions/*.py"
      - name: Open PR with refactors
        if: ${{ failure() }}
        uses: peter-evans/create-pull-request@v7
        with:
          title: "Automated refactor: health-check regressions"
          commit-message: "Apply AI-suggested refactors for errors found in nightly health check"
          body: |
            The nightly health-check detected new exceptions or test failures.
            This PR applies function-level refactor suggestions from ChatGPT.
          branch: refactor/health-${{ github.run_id }}
