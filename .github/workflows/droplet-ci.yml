name: Droplet CI & Nightly Health-Check

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 3 * * *'

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:

  lint-and-test:
    name: Lint & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -U black flake8 pytest
      - run: black .
      - run: black --check .
      - run: flake8 . --exclude venv,.venv
      - run: pytest --maxfail=1 --disable-warnings -q

  deploy-to-droplet:
    name: Deploy to Droplet
    needs: [ lint-and-test ]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -U black flake8 pytest
      - run: black .
      - run: black --check .
      - name: Archive bot for transfer
        run: tar czf bot-dist.tar.gz .
      - name: Copy archive to droplet
        if: ${{ secrets.DROPLET_HOST != '' }}
        uses: appleboy/scp-action@v0.1.6
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          source: "bot-dist.tar.gz"
          target: "~/bot-dist.tar.gz"
      - name: SSH & deploy
        if: ${{ secrets.DROPLET_HOST != '' }}
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          script: |
            systemctl stop ai-trading-scheduler
            rm -rf ~/ai-trading-bot
            mkdir ~/ai-trading-bot
            tar xzf ~/bot-dist.tar.gz -C ~/ai-trading-bot
            rm ~/bot-dist.tar.gz
            cd ~/ai-trading-bot
            source venv/bin/activate
            pip install --upgrade pip && pip install -r requirements.txt
            systemctl start ai-trading-scheduler

  nightly-health-check:
    name: Nightly Health-Check & Auto-Refactorer
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    steps:
      - name: SSH & run health-check script
        if: ${{ secrets.DROPLET_HOST != '' }}
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          script: |
            cd ~/ai-trading-bot
            systemctl is-active --quiet ai-trading-scheduler
            source venv/bin/activate
            pip install --upgrade pip && pip install -r requirements.txt
            python3 scripts/health_check.py > health_report.txt || exit 1
      - name: Auto-refactor suggestions commit
        if: failure()
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "ðŸ›  Automated refactoring suggestions from ChatGPT"
          file_pattern: "refactor-suggestions/*.py"
      - name: Open PR with refactors
        if: failure()
        uses: peter-evans/create-pull-request@v4
        with:
          title: "Automated refactor: health-check regressions"
          commit-message: "Apply AI-suggested refactors for errors found in nightly health check"
          body: |
            The nightly health-check detected new exceptions or test failures.
            This PR applies function-level refactor suggestions from ChatGPT.
          branch: refactor/health-${{ github.run_id }}

