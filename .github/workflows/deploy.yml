name: Deploy to Droplet
permissions:
  contents: read
on:
  push:
    branches: [ main ]
concurrency:
  group: deploy
  cancel-in-progress: true
jobs:
  test-and-deploy:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install AWS CLI
        run: python -m pip install --upgrade pip awscli
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install -U black flake8 pytest
      - name: Install pandas
        run: pip install pandas
      - name: Install dev dependencies
        run: pip install -r requirements-dev.txt
      - run: black .
      - run: black --check .
      - name: Check style with Flake8
        run: flake8 . --max-line-length=120 --extend-ignore=E402,E203 --exclude venv,.venv
      - run: pytest --maxfail=1 --disable-warnings -q
      - name: Archive bot for transfer
        run: |
          # bundle the current commit into bot-dist.tar.gz
          git archive --format=tar.gz --output=bot-dist.tar.gz HEAD

      - name: Prepare SSH key
        run: |
          echo "${{ secrets.DROPLET_SSH_KEY }}" > droplet_key.pem
          chmod 600 droplet_key.pem

      # ensure the deploy directory exists on the droplet
      - name: Create remote deploy directory
        run: |
          ssh \
            -i droplet_key.pem \
            -o StrictHostKeyChecking=no \
            ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }} \
            "mkdir -p /home/${{ secrets.DROPLET_USER }}/ai-trading-bot"

      - name: Debug - list remote directory before copy
        run: |
          ssh \
            -i droplet_key.pem \
            -o StrictHostKeyChecking=no \
            ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }} \
            "ls -la /home/${{ secrets.DROPLET_USER }}/ai-trading-bot"

      # now copy the tarball over
      - name: Copy to droplet via scp
        run: |
          scp \
            -i droplet_key.pem \
            -o StrictHostKeyChecking=no \
            bot-dist.tar.gz \
            "${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }}:/home/${{ secrets.DROPLET_USER }}/ai-trading-bot/"

      - name: Debug - list remote directory after copy
        run: |
          ssh \
            -i droplet_key.pem \
            -o StrictHostKeyChecking=no \
            ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }} \
            "ls -la /home/${{ secrets.DROPLET_USER }}/ai-trading-bot"
      - name: SSH & deploy
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          script: |
            set -e
            cd /home/${{ secrets.DROPLET_USER }}/ai-trading-bot
            # unpack the file we just SCPâ€™d
            tar xf bot-dist.tar.gz
            # recreate virtualenv to avoid system-managed errors
            rm -rf venv
            python3 -m venv venv
            source venv/bin/activate
            python3 -m pip install --upgrade pip
            python3 -m pip install -r requirements.txt -r requirements-dev.txt
            pytest --maxfail=1 --disable-warnings -q
            # restart your service
            sudo systemctl restart ai-trading-scheduler
