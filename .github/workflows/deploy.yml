name: Deploy

on:
  workflow_run:
    workflows: ["CI and Test"]
    types:
      - completed

jobs:
  preflight:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main' }}
    uses: ./.github/workflows/preflight.yml

  deploy:
    needs: preflight
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main' }}
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ github.event.workflow_run.head_sha }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Log in to Docker registry
        env:
          DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "$DOCKER_PASSWORD" | docker login "$DOCKER_REGISTRY" -u "$DOCKER_USERNAME" --password-stdin

      - name: Build Docker image
        env:
          DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
        run: docker build . -t $DOCKER_REGISTRY/$GITHUB_REPOSITORY:$IMAGE_TAG

      - name: Push Docker image
        env:
          DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
        run: docker push $DOCKER_REGISTRY/$GITHUB_REPOSITORY:$IMAGE_TAG

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DROPLET_SSH_KEY }}

      - name: Deploy container
        env:
          DROPLET_HOST: ${{ secrets.DROPLET_HOST }}
          DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: |
          ssh -o StrictHostKeyChecking=no root@$DROPLET_HOST <<'EOS'
            docker pull $DOCKER_REGISTRY/$GITHUB_REPOSITORY:$IMAGE_TAG
            docker stop ai-trader || true
            docker rm ai-trader  || true
            docker run -d \
              --name ai-trader \
              --restart always \
              -e BOT_MODE=$BOT_MODE \
              -e OTHER_ENV_VAR=$OTHER_ENV_VAR \
              $DOCKER_REGISTRY/$GITHUB_REPOSITORY:$IMAGE_TAG
EOS

      - name: Health check
        env:
          DROPLET_HOST: ${{ secrets.DROPLET_HOST }}
        run: |
          ssh -o StrictHostKeyChecking=no root@$DROPLET_HOST <<'EOS'
            for i in {1..30}; do
              if curl --fail http://localhost:5050/health; then exit 0; fi
              sleep 1
            done
            exit 1
EOS

      - name: Post release to Sentry
        if: success()
        uses: getsentry/action-setup@v1

      - name: Finalize Sentry release
        if: success()
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        run: |
          sentry-cli releases new $IMAGE_TAG
          sentry-cli releases finalize $IMAGE_TAG

      - name: Slack Notification
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,commit
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
