file,line,marker,snippet
tools/migrate_metrics_logger.py,11,root_metrics_logger,    # 1) from metrics_logger import X → from ai_trading.telemetry.metrics_logger import X
tools/migrate_metrics_logger.py,18,root_metrics_logger,    # 2) import metrics_logger → from ai_trading.telemetry import metrics_logger
tools/migrate_metrics_logger.py,18,root_metrics_logger,    # 2) import metrics_logger → from ai_trading.telemetry import metrics_logger
tools/migrate_metrics_logger.py,22,root_metrics_logger,"        r""\1from ai_trading.telemetry import metrics_logger\2"","
ai_trading/trade_logic.py,9,root_metrics_logger,from ai_trading.telemetry import metrics_logger
ai_trading/logging.py,23,root_metrics_logger,"    """"""Lazy import metrics_logger to avoid import-time dependencies."""""""
ai_trading/logging.py,24,root_metrics_logger,    from ai_trading.telemetry import metrics_logger
ai_trading/meta_learning.py,372,root_metrics_logger,    from ai_trading.telemetry import metrics_logger  # CSV:17 - Local import
tests/conftest.py,106,config_dunder_getattr,"        def __getattr__(self, name):"
tests/conftest.py,200,config_dunder_getattr,"        def __getattr__(self, name):"
tests/conftest.py,388,config_dunder_getattr,"        def __getattr__(self, name):"
tests/conftest.py,568,config_dunder_getattr,"        def __getattr__(self, name):"
tests/conftest.py,673,config_dunder_getattr,"        def __getattr__(self, name):"
tests/conftest.py,1014,config_dunder_getattr,"        def __getattr__(self, name):"
tests/conftest.py,1066,config_dunder_getattr,"        def __getattr__(self, name):"
tests/conftest.py,1096,config_dunder_getattr,"        def __getattr__(self, name):"
tests/conftest.py,1170,config_dunder_getattr,"        def __getattr__(self, name):"
tests/conftest.py,1272,config_dunder_getattr,"        def __getattr__(self, name):"
scripts/backtest_framework.py,72,mock_class,    def test_position_sizing(self):
scripts/validate_env.py,237,config_dunder_getattr,"        def __getattr__(self, name):"
scripts/production_validator.py,843,root_metrics_logger,            from ai_trading.telemetry import metrics_logger
scripts/ml_model.py,19,import_guard_block,try:
scripts/ml_model.py,39,import_guard_block,try:
scripts/risk_engine.py,25,root_metrics_logger,from ai_trading.telemetry import metrics_logger
scripts/critical_fixes_validation.py,32,mock_class,        from trade_execution import ExecutionEngine
scripts/critical_fixes_validation.py,37,mock_class,"                self.id = ""test_order_123"""
scripts/critical_fixes_validation.py,83,mock_class,        # Create signals with out-of-range confidence from production logs
scripts/critical_fixes_validation.py,130,mock_class,        from trade_execution import ExecutionEngine
scripts/validate_critical_fix.py,33,mock_class,from ai_trading.trade_execution import ExecutionEngine
scripts/validate_critical_fix.py,42,mock_class,"        self.symbol = ""TEST"""
tools/ci/sweep_tests_tools.py,13,root_metrics_logger,"                  r'\1from ai_trading.telemetry import metrics_logger\2', text)"
tools/ci/full_cleanup.py,12,root_metrics_logger,"                  r'\1from ai_trading.telemetry import metrics_logger\2', text)"
tests/mocks/tenacity_mock.py,23,config_dunder_getattr,def __getattr__(name):
tests/unit/test_alpaca_api.py,33,config_dunder_getattr,"        def __getattr__(self, name):"
