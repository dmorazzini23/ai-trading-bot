bringing up nodes...
bringing up nodes...

..................s..sss......s.s..s....sss..F....F.FF...................................................{"ts": "2025-08-22 14:22:46,332", "level": "INFO", "name": "ai_trading.logging", "msg": "Logging configured succâ€¦ully - no duplicates possible", "bot_phase": "GENERAL"}

=========================================================== FAILURES ===========================================================
________________________________________________ test_positions_and_account_old ________________________________________________
[gw4] linux -- Python 3.11.12 /root/.pyenv/versions/3.11.12/bin/python3.11

    def test_positions_and_account_old():
        fake = FakeOld()
        b = AlpacaBroker(fake)
>       assert b.list_open_positions() == ["pos-old"]
E       AssertionError: assert [] == ['pos-old']
E         
E         Right contains one more item: 'pos-old'
E         Use -v to get more diff

tests/test_broker_alpaca_adapter.py:86: AssertionError
______________________________ TestDatetimeTimezoneAwareness.test_alpaca_api_format_compatibility ______________________________
[gw3] linux -- Python 3.11.12 /root/.pyenv/versions/3.11.12/bin/python3.11

self = <tests.test_critical_datetime_fixes.TestDatetimeTimezoneAwareness testMethod=test_alpaca_api_format_compatibility>

    def test_alpaca_api_format_compatibility(self):
        """Test that datetime format is compatible with Alpaca API RFC3339 requirements."""
>       from ai_trading.data_fetcher import ensure_datetime
E       ImportError: cannot import name 'ensure_datetime' from 'ai_trading.data_fetcher' (unknown location)

tests/test_critical_datetime_fixes.py:34: ImportError
____________________________________________________ test_validate_env_main ____________________________________________________
[gw2] linux -- Python 3.11.12 /root/.pyenv/versions/3.11.12/bin/python3.11

mod_name = 'validate_env', error = <class 'ImportError'>

>   ???

<frozen runpy>:131: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

name = 'validate_env', package = None

>   ???
E   ValueError: validate_env.__spec__ is None

<frozen importlib.util>:115: ValueError

The above exception was the direct cause of the following exception:

monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f380e1580d0>

    def test_validate_env_main(monkeypatch):
        """Running validate_env as script calls _main."""
        # AI-AGENT-REF: Mock environment variables to ensure validation passes
        monkeypatch.setenv(
            "WEBHOOK_SECRET",
            "fake_test_webhook_secret_that_is_at_least_32_characters_long_for_security_not_real",
        )
        monkeypatch.setenv(
            "ALPACA_API_KEY", "FAKE_TEST_API_KEY_NOT_REAL_123456789012345"
        )  # Realistic length
        monkeypatch.setenv(
            "ALPACA_SECRET_KEY",
            "FAKE_TEST_SECRET_KEY_NOT_REAL_123456789012345678901234567890ABCDEFGHIJKLMN",
        )  # Realistic length
        monkeypatch.setenv("ALPACA_BASE_URL", "https://paper-api.alpaca.markets")
    
        # AI-AGENT-REF: Clear sys.argv to prevent pytest args from interfering with validate_env argument parsing
        original_argv = sys.argv[:]
        try:
            sys.argv = ["validate_env"]  # Simulate clean module execution
>           runpy.run_module("validate_env", run_name="__main__")

tests/test_additional_coverage.py:350: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
<frozen runpy>:222: in run_module
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

mod_name = 'validate_env', error = <class 'ImportError'>

>   ???
E   ImportError: Error while finding module specification for 'validate_env' (ValueError: validate_env.__spec__ is None)

<frozen runpy>:140: ImportError
_______________________________________ test_data_fetcher_json_decode_is_valueerror_only _______________________________________
[gw0] linux -- Python 3.11.12 /root/.pyenv/versions/3.11.12/bin/python3.11

    def test_data_fetcher_json_decode_is_valueerror_only():
        src = _source(df_mod)
        # The JSON decode guard around resp.json() should not be broad
>       assert re.search(r"resp\.json\(\)\n\s*except ValueError:\n\s*payload\s*=\s*\{\}", src)
E       assert None
E        +  where None = <function search at 0x7f8d282e6200>('resp\\.json\\(\\)\\n\\s*except ValueError:\\n\\s*payload\\s*=\\s*\\{\\}', 'from __future__ import annotations\n\nimport datetime as _dt\nimport os\nimport warnings  # AI-AGENT-REF: control yfi..._minute_yfinance",\n    "is_market_open",\n    "get_last_available_bar",\n    "fh_fetcher",\n    "get_minute_df",\n]\n')
E        +    where <function search at 0x7f8d282e6200> = re.search

tests/runtime/test_exception_narrowing_df_main.py:23: AssertionError
=================================================== short test summary info ====================================================
FAILED tests/test_broker_alpaca_adapter.py::test_positions_and_account_old - AssertionError: assert [] == ['pos-old']
FAILED tests/test_critical_datetime_fixes.py::TestDatetimeTimezoneAwareness::test_alpaca_api_format_compatibility - ImportErr...
FAILED tests/test_additional_coverage.py::test_validate_env_main - ImportError: Error while finding module specification for ...
FAILED tests/runtime/test_exception_narrowing_df_main.py::test_data_fetcher_json_decode_is_valueerror_only - assert None
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 4 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! xdist.dsession.Interrupted: stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
